// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id       Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String
  pages    Page[]
  folders  Folder[]

  @@unique([id])
}

model Page {
  id          Int     @id @default(autoincrement())
  content     String
  title       String  @default("new page")
  folderId    Int?
  userId      Int
  folder      Folder? @relation(fields: [folderId], references: [id])
  user        User    @relation(fields: [userId], references: [id])
  order       Int
  nestedOrder Int?

  @@unique([folderId, title])
  @@unique([folderId, order])
}

model Folder {
  id          Int      @id @default(autoincrement())
  title       String
  parentId    Int?
  pages       Page[]
  order       Int
  nestedOrder Int?
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  parent      Folder?  @relation("FolderHierarchy", fields: [parentId], references: [id])
  children    Folder[] @relation("FolderHierarchy")

  @@unique([order])
}
